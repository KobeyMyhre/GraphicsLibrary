#version 450


layout(triangles, equal_spacing, cw) in;

in vec3 tcPos[];
out vec3 tePosition;
out vec3 tePatchDistance;

//////////
in vec2 CntrlvUV[];
out vec2 EvalvUV;




layout(location = 2)uniform mat4 Projection;
layout(location = 3)uniform mat4 ModelView;


void main()
{
	

	vec2 uv0 = gl_TessCoord.x * CntrlvUV[0];
	vec2 uv1 = gl_TessCoord.z * CntrlvUV[1];


	vec3 p0 = gl_TessCoord.x * tcPos[0];
	vec3 p1 = gl_TessCoord.y * tcPos[1];
	vec3 p2 = gl_TessCoord.z * tcPos[2];

	tePatchDistance = gl_TessCoord;
	tePosition = normalize(p0+p1+p2);
	EvalvUV = normalize(uv0 + uv1);
	EvalvUV = CntrlvUV[0];
	//EvalvUV = mix(uv0,uv1,gl_TessCoord.y);

	gl_Position = Projection * ModelView * vec4(tePosition,1);


}